# -*- coding: utf-8 -*-
"""kanjinumber.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BBSB6qFbVxaNdpurSA32mKWeCkioGku8
"""

kanji_map = {
    0: '零',
    1: '壱',
    2: '弐',
    3: '参',
    4: '四',
    5: '五',
    6: '六',
    7: '七',
    8: '八',
    9: '九',
    10: '拾',
    100: '百',
    1000: '千',
    10000: '万',
    100000000: '億',
    1000000000000: '兆'
}

def arabic_to_kanji(num):
    if num == 0:
        return kanji_map[0]
    # Define units and their names
    units = [1000000000000, 100000000, 10000, 1]
    unit_names = ['兆', '億', '万', '']

    kanji_str = ''
    for unit, unit_name in zip(units, unit_names):
        chunk = num // unit
        if chunk > 0:
            # Add logic here to convert 'chunk' (a 4-digit segment) into Kanji
            kanji_str += str(chunk) + unit_name  # （Temporary code, to be replaced later）
        num = num % unit

    return kanji_str  #（Finally return the converted result）

# Helper function: Convert a 4-digit maximum Arabic number into its Kanji representation
def convert_chunk_to_kanji(chunk):
    result = ''
    # Define units and their names
    units = [1000, 100, 10, 1]
    unit_names = ['千', '百', '拾', '']

    for unit, unit_name in zip(units, unit_names):
        digit = chunk // unit
        if digit > 0:
            result += kanji_map[digit] + unit_name
        chunk = chunk % unit
    return result

# Define the function to convert Arabic numbers to Kanji
def arabic_to_kanji(num):
    if num == 0:
        return kanji_map[0]

    units = [1000000000000, 100000000, 10000, 1]
    unit_names = ['兆', '億', '万', '']

    kanji_str = ''
    for unit, unit_name in zip(units, unit_names):
        chunk = num // unit
        if chunk > 0:
            kanji_str += convert_chunk_to_kanji(chunk) + unit_name
        num = num % unit

    return kanji_str  #Finally return the converted result

print(arabic_to_kanji(10947))
print(arabic_to_kanji(1010))
print(arabic_to_kanji(101))
print(arabic_to_kanji(10))

# Reverse mapping from Kanji to Arabic
reverse_kanji_map = {v: k for k, v in kanji_map.items()}

def kanji_to_arabic(kanji_str):
    total = 0  # The final result
    temp_value = 0  # Temporary sum for each 4-digit chunk
    last_digit = 0  # Last digit read

    for ch in kanji_str:
        if ch in ['兆', '億', '万']:
            temp_value += last_digit  # Add last read digit to the temp value
            temp_value *= reverse_kanji_map[ch]  # Multiply with the larger multiplier
            total += temp_value  # Add the temp value to total
            temp_value = 0  # Reset temp value and last digit for the next chunk
            last_digit = 0
        elif ch in ['千', '百', '拾']:
            temp_value += last_digit * reverse_kanji_map[ch]  # Multiply the last digit with the multiplier and add to temp_value
            last_digit = 0  # Reset last digit
        else:  # If the character is a digit
            last_digit = reverse_kanji_map[ch]  # Update last digit

    total += temp_value + last_digit  # Add any remaining temp value and last digit to the total

    return total

print(kanji_to_arabic('壱万九百四拾七'))
print(kanji_to_arabic('壱千壱拾'))
print(kanji_to_arabic('壱百壱'))
print(kanji_to_arabic('壱拾'))

